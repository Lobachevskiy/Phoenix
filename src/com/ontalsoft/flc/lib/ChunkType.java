// Generated by delombok at Sat Jul 01 03:46:04 EEST 2017
package com.ontalsoft.flc.lib;

/**
 * This enum lists all possible FLI/FLC chunk types according to the Autodesk documentation.
 * For EFS FLCs we'll need only those:
 * <ul>
 * <li>FRAME_TYPE</li>
 * <li>COLOR_256</li>
 * <li>BYTE_RUN</li>
 * <li>DELTA_FLC</li>
 * </ul>
 * @author Akaine
 */
public enum ChunkType {
	CEL_DATA((short) 3),  // registration and transparency
	COLOR_256((short) 4),  // 256-level colour palette
	DELTA_FLC((short) 7),  // delta image, word oriented RLE
	COLOR_64((short) 11),  // 64-level colour palette
	DELTA_FLI((short) 12),  // delta image, byte oriented RLE
	BLACK((short) 13),  // full black frame (rare)
	BYTE_RUN((short) 15),  // full image, byte oriented RLE
	FLI_COPY((short) 16),  // uncompressed image (rare)
	PSTAMP((short) 18),  // postage stamp (icon of the first frame)
	DTA_BRUN((short) 25),  // full image, pixel oriented RLE
	DTA_COPY((short) 26),  // uncompressed image
	DTA_LC((short) 27),  // delta image, pixel oriented RLE
	LABEL((short) 31),  // frame label
	BMP_MASK((short) 32),  // bitmap mask
	MLEV_MASK((short) 33),  // multilevel mask
	SEGMENT((short) 34),  // segment information
	KEY_IMAGE((short) 35),  // key image, similar to BYTE_RUN / DTA_BRUN
	KEY_PAL((short) 36),  // key palette, similar to COLOR_256
	REGION((short) 37),  // region of frame differences
	WAVE((short) 38),  // digitized audio
	USERSTRING((short) 39),  // general purpose user data
	RGN_MASK((short) 40),  // region mask
	LABELEX((short) 41),  // extended frame label (includes symbolic name)
	SHIFT((short) 42),  // scanline delta shifts (compression)
	PATHMAP((short) 43),  // path map (segment transitions)
	PREFIX_TYPE((short) 61696),  // prefix chunk
	SCRIPT_CHUNK((short) 61920),  // embedded "Small" script
	FRAME_TYPE((short) 61946),  // frame chunk
	SEGMENT_TABLE((short) 61947),  // segment table chunk
	HUFFMAN_TABLE((short) 61948);
	// Huffman compression table chunk
	private short id;

	private ChunkType(short id) {
		this.id = id;
	}

	public static ChunkType getChunkType(short id) {
		for (ChunkType obj : values()) {
			if (obj.id == (short) id) {
				return obj;
			}
		}
		return null;
	}

	@java.lang.SuppressWarnings("all")
	@javax.annotation.Generated("lombok")
	public short getId() {
		return this.id;
	}
}
